/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <map>
#include <functional>
#include "ifcpp/Model/BasicTypes.h"
#include "ifcpp/Ifc/IfcAbsorbedDoseMeasure.h"
#include "ifcpp/Ifc/IfcAccelerationMeasure.h"
#include "ifcpp/Ifc/IfcActionRequestTypeEnum.h"
#include "ifcpp/Ifc/IfcActionSourceTypeEnum.h"
#include "ifcpp/Ifc/IfcActionTypeEnum.h"
#include "ifcpp/Ifc/IfcActorSelect.h"
#include "ifcpp/Ifc/IfcActuatorTypeEnum.h"
#include "ifcpp/Ifc/IfcAddressTypeEnum.h"
#include "ifcpp/Ifc/IfcAirTerminalBoxTypeEnum.h"
#include "ifcpp/Ifc/IfcAirTerminalTypeEnum.h"
#include "ifcpp/Ifc/IfcAirToAirHeatRecoveryTypeEnum.h"
#include "ifcpp/Ifc/IfcAlarmTypeEnum.h"
#include "ifcpp/Ifc/IfcAlignmentCantSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcAlignmentHorizontalSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcAlignmentTypeEnum.h"
#include "ifcpp/Ifc/IfcAlignmentVerticalSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcAmountOfSubstanceMeasure.h"
#include "ifcpp/Ifc/IfcAnalysisModelTypeEnum.h"
#include "ifcpp/Ifc/IfcAnalysisTheoryTypeEnum.h"
#include "ifcpp/Ifc/IfcAngularVelocityMeasure.h"
#include "ifcpp/Ifc/IfcAnnotationTypeEnum.h"
#include "ifcpp/Ifc/IfcAppliedValueSelect.h"
#include "ifcpp/Ifc/IfcArcIndex.h"
#include "ifcpp/Ifc/IfcAreaDensityMeasure.h"
#include "ifcpp/Ifc/IfcAreaMeasure.h"
#include "ifcpp/Ifc/IfcArithmeticOperatorEnum.h"
#include "ifcpp/Ifc/IfcAssemblyPlaceEnum.h"
#include "ifcpp/Ifc/IfcAudioVisualApplianceTypeEnum.h"
#include "ifcpp/Ifc/IfcAxis2Placement.h"
#include "ifcpp/Ifc/IfcBSplineCurveForm.h"
#include "ifcpp/Ifc/IfcBSplineSurfaceForm.h"
#include "ifcpp/Ifc/IfcBeamTypeEnum.h"
#include "ifcpp/Ifc/IfcBearingTypeDisplacementEnum.h"
#include "ifcpp/Ifc/IfcBearingTypeEnum.h"
#include "ifcpp/Ifc/IfcBenchmarkEnum.h"
#include "ifcpp/Ifc/IfcBendingParameterSelect.h"
#include "ifcpp/Ifc/IfcBinary.h"
#include "ifcpp/Ifc/IfcBoilerTypeEnum.h"
#include "ifcpp/Ifc/IfcBoolean.h"
#include "ifcpp/Ifc/IfcBooleanOperand.h"
#include "ifcpp/Ifc/IfcBooleanOperator.h"
#include "ifcpp/Ifc/IfcBoxAlignment.h"
#include "ifcpp/Ifc/IfcBridgePartTypeEnum.h"
#include "ifcpp/Ifc/IfcBridgeTypeEnum.h"
#include "ifcpp/Ifc/IfcBuildingElementPartTypeEnum.h"
#include "ifcpp/Ifc/IfcBuildingElementProxyTypeEnum.h"
#include "ifcpp/Ifc/IfcBuildingSystemTypeEnum.h"
#include "ifcpp/Ifc/IfcBuiltSystemTypeEnum.h"
#include "ifcpp/Ifc/IfcBurnerTypeEnum.h"
#include "ifcpp/Ifc/IfcCableCarrierFittingTypeEnum.h"
#include "ifcpp/Ifc/IfcCableCarrierSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcCableFittingTypeEnum.h"
#include "ifcpp/Ifc/IfcCableSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcCaissonFoundationTypeEnum.h"
#include "ifcpp/Ifc/IfcCardinalPointReference.h"
#include "ifcpp/Ifc/IfcChangeActionEnum.h"
#include "ifcpp/Ifc/IfcChillerTypeEnum.h"
#include "ifcpp/Ifc/IfcChimneyTypeEnum.h"
#include "ifcpp/Ifc/IfcClassificationReferenceSelect.h"
#include "ifcpp/Ifc/IfcClassificationSelect.h"
#include "ifcpp/Ifc/IfcCoilTypeEnum.h"
#include "ifcpp/Ifc/IfcColour.h"
#include "ifcpp/Ifc/IfcColourOrFactor.h"
#include "ifcpp/Ifc/IfcColumnTypeEnum.h"
#include "ifcpp/Ifc/IfcCommunicationsApplianceTypeEnum.h"
#include "ifcpp/Ifc/IfcComplexNumber.h"
#include "ifcpp/Ifc/IfcComplexPropertyTemplateTypeEnum.h"
#include "ifcpp/Ifc/IfcCompoundPlaneAngleMeasure.h"
#include "ifcpp/Ifc/IfcCompressorTypeEnum.h"
#include "ifcpp/Ifc/IfcCondenserTypeEnum.h"
#include "ifcpp/Ifc/IfcConnectionTypeEnum.h"
#include "ifcpp/Ifc/IfcConstraintEnum.h"
#include "ifcpp/Ifc/IfcConstructionEquipmentResourceTypeEnum.h"
#include "ifcpp/Ifc/IfcConstructionMaterialResourceTypeEnum.h"
#include "ifcpp/Ifc/IfcConstructionProductResourceTypeEnum.h"
#include "ifcpp/Ifc/IfcContextDependentMeasure.h"
#include "ifcpp/Ifc/IfcControllerTypeEnum.h"
#include "ifcpp/Ifc/IfcConveyorSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcCooledBeamTypeEnum.h"
#include "ifcpp/Ifc/IfcCoolingTowerTypeEnum.h"
#include "ifcpp/Ifc/IfcCoordinateReferenceSystemSelect.h"
#include "ifcpp/Ifc/IfcCostItemTypeEnum.h"
#include "ifcpp/Ifc/IfcCostScheduleTypeEnum.h"
#include "ifcpp/Ifc/IfcCountMeasure.h"
#include "ifcpp/Ifc/IfcCourseTypeEnum.h"
#include "ifcpp/Ifc/IfcCoveringTypeEnum.h"
#include "ifcpp/Ifc/IfcCrewResourceTypeEnum.h"
#include "ifcpp/Ifc/IfcCsgSelect.h"
#include "ifcpp/Ifc/IfcCurtainWallTypeEnum.h"
#include "ifcpp/Ifc/IfcCurvatureMeasure.h"
#include "ifcpp/Ifc/IfcCurveFontOrScaledCurveFontSelect.h"
#include "ifcpp/Ifc/IfcCurveInterpolationEnum.h"
#include "ifcpp/Ifc/IfcCurveMeasureSelect.h"
#include "ifcpp/Ifc/IfcCurveOnSurface.h"
#include "ifcpp/Ifc/IfcCurveOrEdgeCurve.h"
#include "ifcpp/Ifc/IfcCurveStyleFontSelect.h"
#include "ifcpp/Ifc/IfcDamperTypeEnum.h"
#include "ifcpp/Ifc/IfcDataOriginEnum.h"
#include "ifcpp/Ifc/IfcDate.h"
#include "ifcpp/Ifc/IfcDateTime.h"
#include "ifcpp/Ifc/IfcDayInMonthNumber.h"
#include "ifcpp/Ifc/IfcDayInWeekNumber.h"
#include "ifcpp/Ifc/IfcDefinitionSelect.h"
#include "ifcpp/Ifc/IfcDerivedMeasureValue.h"
#include "ifcpp/Ifc/IfcDerivedUnitEnum.h"
#include "ifcpp/Ifc/IfcDescriptiveMeasure.h"
#include "ifcpp/Ifc/IfcDimensionCount.h"
#include "ifcpp/Ifc/IfcDirectionSenseEnum.h"
#include "ifcpp/Ifc/IfcDiscreteAccessoryTypeEnum.h"
#include "ifcpp/Ifc/IfcDistributionBoardTypeEnum.h"
#include "ifcpp/Ifc/IfcDistributionChamberElementTypeEnum.h"
#include "ifcpp/Ifc/IfcDistributionPortTypeEnum.h"
#include "ifcpp/Ifc/IfcDistributionSystemEnum.h"
#include "ifcpp/Ifc/IfcDocumentConfidentialityEnum.h"
#include "ifcpp/Ifc/IfcDocumentSelect.h"
#include "ifcpp/Ifc/IfcDocumentStatusEnum.h"
#include "ifcpp/Ifc/IfcDoorPanelOperationEnum.h"
#include "ifcpp/Ifc/IfcDoorPanelPositionEnum.h"
#include "ifcpp/Ifc/IfcDoorStyleConstructionEnum.h"
#include "ifcpp/Ifc/IfcDoorStyleOperationEnum.h"
#include "ifcpp/Ifc/IfcDoorTypeEnum.h"
#include "ifcpp/Ifc/IfcDoorTypeOperationEnum.h"
#include "ifcpp/Ifc/IfcDoseEquivalentMeasure.h"
#include "ifcpp/Ifc/IfcDuctFittingTypeEnum.h"
#include "ifcpp/Ifc/IfcDuctSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcDuctSilencerTypeEnum.h"
#include "ifcpp/Ifc/IfcDuration.h"
#include "ifcpp/Ifc/IfcDynamicViscosityMeasure.h"
#include "ifcpp/Ifc/IfcEarthworksCutTypeEnum.h"
#include "ifcpp/Ifc/IfcEarthworksFillTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricApplianceTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricCapacitanceMeasure.h"
#include "ifcpp/Ifc/IfcElectricChargeMeasure.h"
#include "ifcpp/Ifc/IfcElectricConductanceMeasure.h"
#include "ifcpp/Ifc/IfcElectricCurrentMeasure.h"
#include "ifcpp/Ifc/IfcElectricDistributionBoardTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricFlowStorageDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricFlowTreatmentDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricGeneratorTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricMotorTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricResistanceMeasure.h"
#include "ifcpp/Ifc/IfcElectricTimeControlTypeEnum.h"
#include "ifcpp/Ifc/IfcElectricVoltageMeasure.h"
#include "ifcpp/Ifc/IfcElementAssemblyTypeEnum.h"
#include "ifcpp/Ifc/IfcElementCompositionEnum.h"
#include "ifcpp/Ifc/IfcEnergyMeasure.h"
#include "ifcpp/Ifc/IfcEngineTypeEnum.h"
#include "ifcpp/Ifc/IfcEvaporativeCoolerTypeEnum.h"
#include "ifcpp/Ifc/IfcEvaporatorTypeEnum.h"
#include "ifcpp/Ifc/IfcEventTriggerTypeEnum.h"
#include "ifcpp/Ifc/IfcEventTypeEnum.h"
#include "ifcpp/Ifc/IfcExternalSpatialElementTypeEnum.h"
#include "ifcpp/Ifc/IfcFacilityPartCommonTypeEnum.h"
#include "ifcpp/Ifc/IfcFacilityUsageEnum.h"
#include "ifcpp/Ifc/IfcFanTypeEnum.h"
#include "ifcpp/Ifc/IfcFastenerTypeEnum.h"
#include "ifcpp/Ifc/IfcFillStyleSelect.h"
#include "ifcpp/Ifc/IfcFilterTypeEnum.h"
#include "ifcpp/Ifc/IfcFireSuppressionTerminalTypeEnum.h"
#include "ifcpp/Ifc/IfcFlowDirectionEnum.h"
#include "ifcpp/Ifc/IfcFlowInstrumentTypeEnum.h"
#include "ifcpp/Ifc/IfcFlowMeterTypeEnum.h"
#include "ifcpp/Ifc/IfcFontStyle.h"
#include "ifcpp/Ifc/IfcFontVariant.h"
#include "ifcpp/Ifc/IfcFontWeight.h"
#include "ifcpp/Ifc/IfcFootingTypeEnum.h"
#include "ifcpp/Ifc/IfcForceMeasure.h"
#include "ifcpp/Ifc/IfcFrequencyMeasure.h"
#include "ifcpp/Ifc/IfcFurnitureTypeEnum.h"
#include "ifcpp/Ifc/IfcGeographicElementTypeEnum.h"
#include "ifcpp/Ifc/IfcGeometricProjectionEnum.h"
#include "ifcpp/Ifc/IfcGeometricSetSelect.h"
#include "ifcpp/Ifc/IfcGeotechnicalStratumTypeEnum.h"
#include "ifcpp/Ifc/IfcGlobalOrLocalEnum.h"
#include "ifcpp/Ifc/IfcGloballyUniqueId.h"
#include "ifcpp/Ifc/IfcGridPlacementDirectionSelect.h"
#include "ifcpp/Ifc/IfcGridTypeEnum.h"
#include "ifcpp/Ifc/IfcHatchLineDistanceSelect.h"
#include "ifcpp/Ifc/IfcHeatExchangerTypeEnum.h"
#include "ifcpp/Ifc/IfcHeatFluxDensityMeasure.h"
#include "ifcpp/Ifc/IfcHeatingValueMeasure.h"
#include "ifcpp/Ifc/IfcHumidifierTypeEnum.h"
#include "ifcpp/Ifc/IfcIdentifier.h"
#include "ifcpp/Ifc/IfcIlluminanceMeasure.h"
#include "ifcpp/Ifc/IfcImpactProtectionDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcInductanceMeasure.h"
#include "ifcpp/Ifc/IfcInteger.h"
#include "ifcpp/Ifc/IfcIntegerCountRateMeasure.h"
#include "ifcpp/Ifc/IfcInterceptorTypeEnum.h"
#include "ifcpp/Ifc/IfcInterferenceSelect.h"
#include "ifcpp/Ifc/IfcInternalOrExternalEnum.h"
#include "ifcpp/Ifc/IfcInventoryTypeEnum.h"
#include "ifcpp/Ifc/IfcIonConcentrationMeasure.h"
#include "ifcpp/Ifc/IfcIsothermalMoistureCapacityMeasure.h"
#include "ifcpp/Ifc/IfcJunctionBoxTypeEnum.h"
#include "ifcpp/Ifc/IfcKinematicViscosityMeasure.h"
#include "ifcpp/Ifc/IfcKnotType.h"
#include "ifcpp/Ifc/IfcLabel.h"
#include "ifcpp/Ifc/IfcLaborResourceTypeEnum.h"
#include "ifcpp/Ifc/IfcLampTypeEnum.h"
#include "ifcpp/Ifc/IfcLanguageId.h"
#include "ifcpp/Ifc/IfcLayerSetDirectionEnum.h"
#include "ifcpp/Ifc/IfcLayeredItem.h"
#include "ifcpp/Ifc/IfcLengthMeasure.h"
#include "ifcpp/Ifc/IfcLibrarySelect.h"
#include "ifcpp/Ifc/IfcLightDistributionCurveEnum.h"
#include "ifcpp/Ifc/IfcLightDistributionDataSourceSelect.h"
#include "ifcpp/Ifc/IfcLightEmissionSourceEnum.h"
#include "ifcpp/Ifc/IfcLightFixtureTypeEnum.h"
#include "ifcpp/Ifc/IfcLineIndex.h"
#include "ifcpp/Ifc/IfcLinearForceMeasure.h"
#include "ifcpp/Ifc/IfcLinearMomentMeasure.h"
#include "ifcpp/Ifc/IfcLinearStiffnessMeasure.h"
#include "ifcpp/Ifc/IfcLinearVelocityMeasure.h"
#include "ifcpp/Ifc/IfcLiquidTerminalTypeEnum.h"
#include "ifcpp/Ifc/IfcLoadGroupTypeEnum.h"
#include "ifcpp/Ifc/IfcLogical.h"
#include "ifcpp/Ifc/IfcLogicalOperatorEnum.h"
#include "ifcpp/Ifc/IfcLuminousFluxMeasure.h"
#include "ifcpp/Ifc/IfcLuminousIntensityDistributionMeasure.h"
#include "ifcpp/Ifc/IfcLuminousIntensityMeasure.h"
#include "ifcpp/Ifc/IfcMagneticFluxDensityMeasure.h"
#include "ifcpp/Ifc/IfcMagneticFluxMeasure.h"
#include "ifcpp/Ifc/IfcMarineFacilityTypeEnum.h"
#include "ifcpp/Ifc/IfcMarinePartTypeEnum.h"
#include "ifcpp/Ifc/IfcMassDensityMeasure.h"
#include "ifcpp/Ifc/IfcMassFlowRateMeasure.h"
#include "ifcpp/Ifc/IfcMassMeasure.h"
#include "ifcpp/Ifc/IfcMassPerLengthMeasure.h"
#include "ifcpp/Ifc/IfcMaterialSelect.h"
#include "ifcpp/Ifc/IfcMeasureValue.h"
#include "ifcpp/Ifc/IfcMechanicalFastenerTypeEnum.h"
#include "ifcpp/Ifc/IfcMedicalDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcMemberTypeEnum.h"
#include "ifcpp/Ifc/IfcMetricValueSelect.h"
#include "ifcpp/Ifc/IfcMobileTelecommunicationsApplianceTypeEnum.h"
#include "ifcpp/Ifc/IfcModulusOfElasticityMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfLinearSubgradeReactionMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfRotationalSubgradeReactionMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfRotationalSubgradeReactionSelect.h"
#include "ifcpp/Ifc/IfcModulusOfSubgradeReactionMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfSubgradeReactionSelect.h"
#include "ifcpp/Ifc/IfcModulusOfTranslationalSubgradeReactionSelect.h"
#include "ifcpp/Ifc/IfcMoistureDiffusivityMeasure.h"
#include "ifcpp/Ifc/IfcMolecularWeightMeasure.h"
#include "ifcpp/Ifc/IfcMomentOfInertiaMeasure.h"
#include "ifcpp/Ifc/IfcMonetaryMeasure.h"
#include "ifcpp/Ifc/IfcMonthInYearNumber.h"
#include "ifcpp/Ifc/IfcMooringDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcMotorConnectionTypeEnum.h"
#include "ifcpp/Ifc/IfcNavigationElementTypeEnum.h"
#include "ifcpp/Ifc/IfcNonNegativeLengthMeasure.h"
#include "ifcpp/Ifc/IfcNormalisedRatioMeasure.h"
#include "ifcpp/Ifc/IfcNumericMeasure.h"
#include "ifcpp/Ifc/IfcObjectReferenceSelect.h"
#include "ifcpp/Ifc/IfcObjectTypeEnum.h"
#include "ifcpp/Ifc/IfcObjectiveEnum.h"
#include "ifcpp/Ifc/IfcOccupantTypeEnum.h"
#include "ifcpp/Ifc/IfcOpeningElementTypeEnum.h"
#include "ifcpp/Ifc/IfcOutletTypeEnum.h"
#include "ifcpp/Ifc/IfcPHMeasure.h"
#include "ifcpp/Ifc/IfcParameterValue.h"
#include "ifcpp/Ifc/IfcPavementTypeEnum.h"
#include "ifcpp/Ifc/IfcPerformanceHistoryTypeEnum.h"
#include "ifcpp/Ifc/IfcPermeableCoveringOperationEnum.h"
#include "ifcpp/Ifc/IfcPermitTypeEnum.h"
#include "ifcpp/Ifc/IfcPhysicalOrVirtualEnum.h"
#include "ifcpp/Ifc/IfcPileConstructionEnum.h"
#include "ifcpp/Ifc/IfcPileTypeEnum.h"
#include "ifcpp/Ifc/IfcPipeFittingTypeEnum.h"
#include "ifcpp/Ifc/IfcPipeSegmentTypeEnum.h"
#include "ifcpp/Ifc/IfcPlanarForceMeasure.h"
#include "ifcpp/Ifc/IfcPlaneAngleMeasure.h"
#include "ifcpp/Ifc/IfcPlateTypeEnum.h"
#include "ifcpp/Ifc/IfcPointOrVertexPoint.h"
#include "ifcpp/Ifc/IfcPositiveInteger.h"
#include "ifcpp/Ifc/IfcPositiveLengthMeasure.h"
#include "ifcpp/Ifc/IfcPositivePlaneAngleMeasure.h"
#include "ifcpp/Ifc/IfcPositiveRatioMeasure.h"
#include "ifcpp/Ifc/IfcPowerMeasure.h"
#include "ifcpp/Ifc/IfcPreferredSurfaceCurveRepresentation.h"
#include "ifcpp/Ifc/IfcPresentableText.h"
#include "ifcpp/Ifc/IfcPressureMeasure.h"
#include "ifcpp/Ifc/IfcProcedureTypeEnum.h"
#include "ifcpp/Ifc/IfcProcessSelect.h"
#include "ifcpp/Ifc/IfcProductRepresentationSelect.h"
#include "ifcpp/Ifc/IfcProductSelect.h"
#include "ifcpp/Ifc/IfcProfileTypeEnum.h"
#include "ifcpp/Ifc/IfcProjectOrderTypeEnum.h"
#include "ifcpp/Ifc/IfcProjectedOrTrueLengthEnum.h"
#include "ifcpp/Ifc/IfcProjectionElementTypeEnum.h"
#include "ifcpp/Ifc/IfcPropertySetDefinitionSelect.h"
#include "ifcpp/Ifc/IfcPropertySetDefinitionSet.h"
#include "ifcpp/Ifc/IfcPropertySetTemplateTypeEnum.h"
#include "ifcpp/Ifc/IfcProtectiveDeviceTrippingUnitTypeEnum.h"
#include "ifcpp/Ifc/IfcProtectiveDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcPumpTypeEnum.h"
#include "ifcpp/Ifc/IfcRadioActivityMeasure.h"
#include "ifcpp/Ifc/IfcRailTypeEnum.h"
#include "ifcpp/Ifc/IfcRailingTypeEnum.h"
#include "ifcpp/Ifc/IfcRailwayPartTypeEnum.h"
#include "ifcpp/Ifc/IfcRailwayTypeEnum.h"
#include "ifcpp/Ifc/IfcRampFlightTypeEnum.h"
#include "ifcpp/Ifc/IfcRampTypeEnum.h"
#include "ifcpp/Ifc/IfcRatioMeasure.h"
#include "ifcpp/Ifc/IfcReal.h"
#include "ifcpp/Ifc/IfcRecurrenceTypeEnum.h"
#include "ifcpp/Ifc/IfcReferentTypeEnum.h"
#include "ifcpp/Ifc/IfcReflectanceMethodEnum.h"
#include "ifcpp/Ifc/IfcReinforcedSoilTypeEnum.h"
#include "ifcpp/Ifc/IfcReinforcingBarRoleEnum.h"
#include "ifcpp/Ifc/IfcReinforcingBarSurfaceEnum.h"
#include "ifcpp/Ifc/IfcReinforcingBarTypeEnum.h"
#include "ifcpp/Ifc/IfcReinforcingMeshTypeEnum.h"
#include "ifcpp/Ifc/IfcResourceObjectSelect.h"
#include "ifcpp/Ifc/IfcResourceSelect.h"
#include "ifcpp/Ifc/IfcRoadPartTypeEnum.h"
#include "ifcpp/Ifc/IfcRoadTypeEnum.h"
#include "ifcpp/Ifc/IfcRoleEnum.h"
#include "ifcpp/Ifc/IfcRoofTypeEnum.h"
#include "ifcpp/Ifc/IfcRotationalFrequencyMeasure.h"
#include "ifcpp/Ifc/IfcRotationalMassMeasure.h"
#include "ifcpp/Ifc/IfcRotationalStiffnessMeasure.h"
#include "ifcpp/Ifc/IfcRotationalStiffnessSelect.h"
#include "ifcpp/Ifc/IfcSIPrefix.h"
#include "ifcpp/Ifc/IfcSIUnitName.h"
#include "ifcpp/Ifc/IfcSanitaryTerminalTypeEnum.h"
#include "ifcpp/Ifc/IfcSectionModulusMeasure.h"
#include "ifcpp/Ifc/IfcSectionTypeEnum.h"
#include "ifcpp/Ifc/IfcSectionalAreaIntegralMeasure.h"
#include "ifcpp/Ifc/IfcSegmentIndexSelect.h"
#include "ifcpp/Ifc/IfcSensorTypeEnum.h"
#include "ifcpp/Ifc/IfcSequenceEnum.h"
#include "ifcpp/Ifc/IfcShadingDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcShearModulusMeasure.h"
#include "ifcpp/Ifc/IfcShell.h"
#include "ifcpp/Ifc/IfcSignTypeEnum.h"
#include "ifcpp/Ifc/IfcSignalTypeEnum.h"
#include "ifcpp/Ifc/IfcSimplePropertyTemplateTypeEnum.h"
#include "ifcpp/Ifc/IfcSimpleValue.h"
#include "ifcpp/Ifc/IfcSizeSelect.h"
#include "ifcpp/Ifc/IfcSlabTypeEnum.h"
#include "ifcpp/Ifc/IfcSolarDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcSolidAngleMeasure.h"
#include "ifcpp/Ifc/IfcSolidOrShell.h"
#include "ifcpp/Ifc/IfcSoundPowerLevelMeasure.h"
#include "ifcpp/Ifc/IfcSoundPowerMeasure.h"
#include "ifcpp/Ifc/IfcSoundPressureLevelMeasure.h"
#include "ifcpp/Ifc/IfcSoundPressureMeasure.h"
#include "ifcpp/Ifc/IfcSpaceBoundarySelect.h"
#include "ifcpp/Ifc/IfcSpaceHeaterTypeEnum.h"
#include "ifcpp/Ifc/IfcSpaceTypeEnum.h"
#include "ifcpp/Ifc/IfcSpatialReferenceSelect.h"
#include "ifcpp/Ifc/IfcSpatialZoneTypeEnum.h"
#include "ifcpp/Ifc/IfcSpecificHeatCapacityMeasure.h"
#include "ifcpp/Ifc/IfcSpecularExponent.h"
#include "ifcpp/Ifc/IfcSpecularHighlightSelect.h"
#include "ifcpp/Ifc/IfcSpecularRoughness.h"
#include "ifcpp/Ifc/IfcStackTerminalTypeEnum.h"
#include "ifcpp/Ifc/IfcStairFlightTypeEnum.h"
#include "ifcpp/Ifc/IfcStairTypeEnum.h"
#include "ifcpp/Ifc/IfcStateEnum.h"
#include "ifcpp/Ifc/IfcStructuralActivityAssignmentSelect.h"
#include "ifcpp/Ifc/IfcStructuralCurveActivityTypeEnum.h"
#include "ifcpp/Ifc/IfcStructuralCurveMemberTypeEnum.h"
#include "ifcpp/Ifc/IfcStructuralSurfaceActivityTypeEnum.h"
#include "ifcpp/Ifc/IfcStructuralSurfaceMemberTypeEnum.h"
#include "ifcpp/Ifc/IfcSubContractResourceTypeEnum.h"
#include "ifcpp/Ifc/IfcSurfaceFeatureTypeEnum.h"
#include "ifcpp/Ifc/IfcSurfaceOrFaceSurface.h"
#include "ifcpp/Ifc/IfcSurfaceSide.h"
#include "ifcpp/Ifc/IfcSurfaceStyleElementSelect.h"
#include "ifcpp/Ifc/IfcSwitchingDeviceTypeEnum.h"
#include "ifcpp/Ifc/IfcSystemFurnitureElementTypeEnum.h"
#include "ifcpp/Ifc/IfcTankTypeEnum.h"
#include "ifcpp/Ifc/IfcTaskDurationEnum.h"
#include "ifcpp/Ifc/IfcTaskTypeEnum.h"
#include "ifcpp/Ifc/IfcTemperatureGradientMeasure.h"
#include "ifcpp/Ifc/IfcTemperatureRateOfChangeMeasure.h"
#include "ifcpp/Ifc/IfcTendonAnchorTypeEnum.h"
#include "ifcpp/Ifc/IfcTendonConduitTypeEnum.h"
#include "ifcpp/Ifc/IfcTendonTypeEnum.h"
#include "ifcpp/Ifc/IfcText.h"
#include "ifcpp/Ifc/IfcTextAlignment.h"
#include "ifcpp/Ifc/IfcTextDecoration.h"
#include "ifcpp/Ifc/IfcTextFontName.h"
#include "ifcpp/Ifc/IfcTextFontSelect.h"
#include "ifcpp/Ifc/IfcTextPath.h"
#include "ifcpp/Ifc/IfcTextTransformation.h"
#include "ifcpp/Ifc/IfcThermalAdmittanceMeasure.h"
#include "ifcpp/Ifc/IfcThermalConductivityMeasure.h"
#include "ifcpp/Ifc/IfcThermalExpansionCoefficientMeasure.h"
#include "ifcpp/Ifc/IfcThermalResistanceMeasure.h"
#include "ifcpp/Ifc/IfcThermalTransmittanceMeasure.h"
#include "ifcpp/Ifc/IfcThermodynamicTemperatureMeasure.h"
#include "ifcpp/Ifc/IfcTime.h"
#include "ifcpp/Ifc/IfcTimeMeasure.h"
#include "ifcpp/Ifc/IfcTimeOrRatioSelect.h"
#include "ifcpp/Ifc/IfcTimeSeriesDataTypeEnum.h"
#include "ifcpp/Ifc/IfcTimeStamp.h"
#include "ifcpp/Ifc/IfcTorqueMeasure.h"
#include "ifcpp/Ifc/IfcTrackElementTypeEnum.h"
#include "ifcpp/Ifc/IfcTransformerTypeEnum.h"
#include "ifcpp/Ifc/IfcTransitionCode.h"
#include "ifcpp/Ifc/IfcTranslationalStiffnessSelect.h"
#include "ifcpp/Ifc/IfcTransportElementTypeEnum.h"
#include "ifcpp/Ifc/IfcTrimmingPreference.h"
#include "ifcpp/Ifc/IfcTrimmingSelect.h"
#include "ifcpp/Ifc/IfcTubeBundleTypeEnum.h"
#include "ifcpp/Ifc/IfcURIReference.h"
#include "ifcpp/Ifc/IfcUnit.h"
#include "ifcpp/Ifc/IfcUnitEnum.h"
#include "ifcpp/Ifc/IfcUnitaryControlElementTypeEnum.h"
#include "ifcpp/Ifc/IfcUnitaryEquipmentTypeEnum.h"
#include "ifcpp/Ifc/IfcValue.h"
#include "ifcpp/Ifc/IfcValveTypeEnum.h"
#include "ifcpp/Ifc/IfcVaporPermeabilityMeasure.h"
#include "ifcpp/Ifc/IfcVectorOrDirection.h"
#include "ifcpp/Ifc/IfcVehicleTypeEnum.h"
#include "ifcpp/Ifc/IfcVibrationDamperTypeEnum.h"
#include "ifcpp/Ifc/IfcVibrationIsolatorTypeEnum.h"
#include "ifcpp/Ifc/IfcVirtualElementTypeEnum.h"
#include "ifcpp/Ifc/IfcVoidingFeatureTypeEnum.h"
#include "ifcpp/Ifc/IfcVolumeMeasure.h"
#include "ifcpp/Ifc/IfcVolumetricFlowRateMeasure.h"
#include "ifcpp/Ifc/IfcWallTypeEnum.h"
#include "ifcpp/Ifc/IfcWarpingConstantMeasure.h"
#include "ifcpp/Ifc/IfcWarpingMomentMeasure.h"
#include "ifcpp/Ifc/IfcWarpingStiffnessSelect.h"
#include "ifcpp/Ifc/IfcWasteTerminalTypeEnum.h"
#include "ifcpp/Ifc/IfcWindowPanelOperationEnum.h"
#include "ifcpp/Ifc/IfcWindowPanelPositionEnum.h"
#include "ifcpp/Ifc/IfcWindowStyleConstructionEnum.h"
#include "ifcpp/Ifc/IfcWindowStyleOperationEnum.h"
#include "ifcpp/Ifc/IfcWindowTypeEnum.h"
#include "ifcpp/Ifc/IfcWindowTypePartitioningEnum.h"
#include "ifcpp/Ifc/IfcWorkCalendarTypeEnum.h"
#include "ifcpp/Ifc/IfcWorkPlanTypeEnum.h"
#include "ifcpp/Ifc/IfcWorkScheduleTypeEnum.h"
#include "ifcpp/Ifc/Factories/TypeFactory.h"

	static std::map<std::string, std::function<shared_ptr<BuildingObject>( const std::string&, const std::map<int, shared_ptr<BuildingEntity> >&, std::stringstream& )> > type_factory_map = {
{ "IFCABSORBEDDOSEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAbsorbedDoseMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCACCELERATIONMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAccelerationMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCACTIONREQUESTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcActionRequestTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCACTIONSOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcActionSourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCACTIONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcActionTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCACTORSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcActorSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCACTUATORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcActuatorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCADDRESSTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAddressTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAIRTERMINALBOXTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAirTerminalBoxTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAIRTERMINALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAirTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAIRTOAIRHEATRECOVERYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAirToAirHeatRecoveryTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCALARMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlarmTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCALIGNMENTCANTSEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentCantSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCALIGNMENTHORIZONTALSEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentHorizontalSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCALIGNMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCALIGNMENTVERTICALSEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAlignmentVerticalSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAMOUNTOFSUBSTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAmountOfSubstanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCANALYSISMODELTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAnalysisModelTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCANALYSISTHEORYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAnalysisTheoryTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCANGULARVELOCITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAngularVelocityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCANNOTATIONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAnnotationTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAPPLIEDVALUESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAppliedValueSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCARCINDEX", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcArcIndex::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAREADENSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAreaDensityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAREAMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAreaMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCARITHMETICOPERATORENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcArithmeticOperatorEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCASSEMBLYPLACEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAssemblyPlaceEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAUDIOVISUALAPPLIANCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAudioVisualApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCAXIS2PLACEMENT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcAxis2Placement::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBSPLINECURVEFORM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBSplineCurveForm::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBSPLINESURFACEFORM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBSplineSurfaceForm::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBEAMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBeamTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBEARINGTYPEDISPLACEMENTENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBearingTypeDisplacementEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBEARINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBearingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBENCHMARKENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBenchmarkEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBENDINGPARAMETERSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBendingParameterSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBINARY", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBinary::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBOILERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBoilerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBOOLEAN", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBoolean::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBOOLEANOPERAND", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBooleanOperand::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBOOLEANOPERATOR", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBooleanOperator::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBOXALIGNMENT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBoxAlignment::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBRIDGEPARTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBridgePartTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBRIDGETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBridgeTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBUILDINGELEMENTPARTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuildingElementPartTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBUILDINGELEMENTPROXYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuildingElementProxyTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBUILDINGSYSTEMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuildingSystemTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBUILTSYSTEMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBuiltSystemTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCBURNERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcBurnerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCABLECARRIERFITTINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableCarrierFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCABLECARRIERSEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableCarrierSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCABLEFITTINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCABLESEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCableSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCAISSONFOUNDATIONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCaissonFoundationTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCARDINALPOINTREFERENCE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCardinalPointReference::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCHANGEACTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcChangeActionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCHILLERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcChillerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCHIMNEYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcChimneyTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCLASSIFICATIONREFERENCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcClassificationReferenceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCLASSIFICATIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcClassificationSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOILTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoilTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOLOUR", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcColour::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOLOURORFACTOR", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcColourOrFactor::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOLUMNTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcColumnTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOMMUNICATIONSAPPLIANCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCommunicationsApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOMPLEXNUMBER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcComplexNumber::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOMPLEXPROPERTYTEMPLATETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcComplexPropertyTemplateTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOMPOUNDPLANEANGLEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCompoundPlaneAngleMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOMPRESSORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCompressorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONDENSERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCondenserTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONNECTIONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcConnectionTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONSTRAINTENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstraintEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONSTRUCTIONEQUIPMENTRESOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstructionEquipmentResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONSTRUCTIONMATERIALRESOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstructionMaterialResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONSTRUCTIONPRODUCTRESOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcConstructionProductResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONTEXTDEPENDENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcContextDependentMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONTROLLERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcControllerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCONVEYORSEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcConveyorSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOOLEDBEAMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCooledBeamTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOOLINGTOWERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoolingTowerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOORDINATEREFERENCESYSTEMSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoordinateReferenceSystemSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOSTITEMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCostItemTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOSTSCHEDULETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCostScheduleTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOUNTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCountMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOURSETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCourseTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCOVERINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCoveringTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCREWRESOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCrewResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCSGSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCsgSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURTAINWALLTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurtainWallTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVATUREMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurvatureMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVEFONTORSCALEDCURVEFONTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveFontOrScaledCurveFontSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVEINTERPOLATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveInterpolationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVEMEASURESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveMeasureSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVEONSURFACE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveOnSurface::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVEOREDGECURVE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveOrEdgeCurve::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCCURVESTYLEFONTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcCurveStyleFontSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDAMPERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDamperTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDATAORIGINENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDataOriginEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDATE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDate::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDATETIME", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDateTime::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDAYINMONTHNUMBER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDayInMonthNumber::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDAYINWEEKNUMBER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDayInWeekNumber::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDEFINITIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDefinitionSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDERIVEDMEASUREVALUE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDerivedMeasureValue::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDERIVEDUNITENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDerivedUnitEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDESCRIPTIVEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDescriptiveMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDIMENSIONCOUNT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDimensionCount::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDIRECTIONSENSEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDirectionSenseEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDISCRETEACCESSORYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDiscreteAccessoryTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDISTRIBUTIONBOARDTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionBoardTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDISTRIBUTIONCHAMBERELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionChamberElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDISTRIBUTIONPORTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionPortTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDISTRIBUTIONSYSTEMENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDistributionSystemEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOCUMENTCONFIDENTIALITYENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDocumentConfidentialityEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOCUMENTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDocumentSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOCUMENTSTATUSENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDocumentStatusEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOORPANELOPERATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorPanelOperationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOORPANELPOSITIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorPanelPositionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOORSTYLECONSTRUCTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorStyleConstructionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOORSTYLEOPERATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorStyleOperationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOORTYPEOPERATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoorTypeOperationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDOSEEQUIVALENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDoseEquivalentMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDUCTFITTINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuctFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDUCTSEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuctSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDUCTSILENCERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuctSilencerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDURATION", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDuration::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCDYNAMICVISCOSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcDynamicViscosityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEARTHWORKSCUTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEarthworksCutTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEARTHWORKSFILLTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEarthworksFillTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICAPPLIANCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICCAPACITANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricCapacitanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICCHARGEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricChargeMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICCONDUCTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricConductanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICCURRENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricCurrentMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICDISTRIBUTIONBOARDTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricDistributionBoardTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICFLOWSTORAGEDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricFlowStorageDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICFLOWTREATMENTDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricFlowTreatmentDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICGENERATORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricGeneratorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICMOTORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricMotorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICRESISTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricResistanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICTIMECONTROLTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricTimeControlTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELECTRICVOLTAGEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElectricVoltageMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELEMENTASSEMBLYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElementAssemblyTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCELEMENTCOMPOSITIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcElementCompositionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCENERGYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEnergyMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCENGINETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEngineTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEVAPORATIVECOOLERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEvaporativeCoolerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEVAPORATORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEvaporatorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEVENTTRIGGERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEventTriggerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEVENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcEventTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCEXTERNALSPATIALELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcExternalSpatialElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFACILITYPARTCOMMONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFacilityPartCommonTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFACILITYUSAGEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFacilityUsageEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFANTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFanTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFASTENERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFastenerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFILLSTYLESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFillStyleSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFILTERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFilterTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFIRESUPPRESSIONTERMINALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFireSuppressionTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFLOWDIRECTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFlowDirectionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFLOWINSTRUMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFlowInstrumentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFLOWMETERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFlowMeterTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFONTSTYLE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFontStyle::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFONTVARIANT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFontVariant::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFONTWEIGHT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFontWeight::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFOOTINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFootingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFORCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcForceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFREQUENCYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFrequencyMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCFURNITURETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcFurnitureTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGEOGRAPHICELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeographicElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGEOMETRICPROJECTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeometricProjectionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGEOMETRICSETSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeometricSetSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGEOTECHNICALSTRATUMTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGeotechnicalStratumTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGLOBALORLOCALENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGlobalOrLocalEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGLOBALLYUNIQUEID", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGloballyUniqueId::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGRIDPLACEMENTDIRECTIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGridPlacementDirectionSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCGRIDTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcGridTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCHATCHLINEDISTANCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcHatchLineDistanceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCHEATEXCHANGERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcHeatExchangerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCHEATFLUXDENSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcHeatFluxDensityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCHEATINGVALUEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcHeatingValueMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCHUMIDIFIERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcHumidifierTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCIDENTIFIER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcIdentifier::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCILLUMINANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcIlluminanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCIMPACTPROTECTIONDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcImpactProtectionDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINDUCTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcInductanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINTEGER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcInteger::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINTEGERCOUNTRATEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcIntegerCountRateMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINTERCEPTORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcInterceptorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINTERFERENCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcInterferenceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINTERNALOREXTERNALENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcInternalOrExternalEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCINVENTORYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcInventoryTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCIONCONCENTRATIONMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcIonConcentrationMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCISOTHERMALMOISTURECAPACITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcIsothermalMoistureCapacityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCJUNCTIONBOXTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcJunctionBoxTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCKINEMATICVISCOSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcKinematicViscosityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCKNOTTYPE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcKnotType::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLABEL", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLabel::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLABORRESOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLaborResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLAMPTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLampTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLANGUAGEID", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLanguageId::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLAYERSETDIRECTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLayerSetDirectionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLAYEREDITEM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLayeredItem::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLENGTHMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLengthMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLIBRARYSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLibrarySelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLIGHTDISTRIBUTIONCURVEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightDistributionCurveEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLIGHTDISTRIBUTIONDATASOURCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightDistributionDataSourceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLIGHTEMISSIONSOURCEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightEmissionSourceEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLIGHTFIXTURETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLightFixtureTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLINEINDEX", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLineIndex::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLINEARFORCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearForceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLINEARMOMENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearMomentMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLINEARSTIFFNESSMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearStiffnessMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLINEARVELOCITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLinearVelocityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLIQUIDTERMINALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLiquidTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLOADGROUPTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLoadGroupTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLOGICAL", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLogical::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLOGICALOPERATORENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLogicalOperatorEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLUMINOUSFLUXMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLuminousFluxMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLuminousIntensityDistributionMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCLUMINOUSINTENSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcLuminousIntensityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMAGNETICFLUXDENSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMagneticFluxDensityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMAGNETICFLUXMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMagneticFluxMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMARINEFACILITYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMarineFacilityTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMARINEPARTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMarinePartTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMASSDENSITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassDensityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMASSFLOWRATEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassFlowRateMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMASSMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMASSPERLENGTHMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMassPerLengthMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMATERIALSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMaterialSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMEASUREVALUE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMeasureValue::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMECHANICALFASTENERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMechanicalFastenerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMEDICALDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMedicalDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMEMBERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMemberTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMETRICVALUESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMetricValueSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMobileTelecommunicationsApplianceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFELASTICITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfElasticityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfLinearSubgradeReactionMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfRotationalSubgradeReactionMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFROTATIONALSUBGRADEREACTIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfRotationalSubgradeReactionSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFSUBGRADEREACTIONMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfSubgradeReactionMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFSUBGRADEREACTIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfSubgradeReactionSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMODULUSOFTRANSLATIONALSUBGRADEREACTIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcModulusOfTranslationalSubgradeReactionSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMOISTUREDIFFUSIVITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMoistureDiffusivityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMOLECULARWEIGHTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMolecularWeightMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMOMENTOFINERTIAMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMomentOfInertiaMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMONETARYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMonetaryMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMONTHINYEARNUMBER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMonthInYearNumber::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMOORINGDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMooringDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCMOTORCONNECTIONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcMotorConnectionTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCNAVIGATIONELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcNavigationElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCNONNEGATIVELENGTHMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcNonNegativeLengthMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCNORMALISEDRATIOMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcNormalisedRatioMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCNUMERICMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcNumericMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCOBJECTREFERENCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcObjectReferenceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCOBJECTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcObjectTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCOBJECTIVEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcObjectiveEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCOCCUPANTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcOccupantTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCOPENINGELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcOpeningElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCOUTLETTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcOutletTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPHMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPHMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPARAMETERVALUE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcParameterValue::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPAVEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPavementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPERFORMANCEHISTORYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPerformanceHistoryTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPERMEABLECOVERINGOPERATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPermeableCoveringOperationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPERMITTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPermitTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPHYSICALORVIRTUALENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPhysicalOrVirtualEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPILECONSTRUCTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPileConstructionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPILETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPileTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPIPEFITTINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPipeFittingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPIPESEGMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPipeSegmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPLANARFORCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPlanarForceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPLANEANGLEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPlaneAngleMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPLATETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPlateTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPOINTORVERTEXPOINT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPointOrVertexPoint::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPOSITIVEINTEGER", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositiveInteger::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPOSITIVELENGTHMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositiveLengthMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPOSITIVEPLANEANGLEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositivePlaneAngleMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPOSITIVERATIOMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPositiveRatioMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPOWERMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPowerMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPREFERREDSURFACECURVEREPRESENTATION", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPreferredSurfaceCurveRepresentation::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPRESENTABLETEXT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPresentableText::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPRESSUREMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPressureMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROCEDURETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProcedureTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROCESSSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProcessSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPRODUCTREPRESENTATIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProductRepresentationSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPRODUCTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProductSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROFILETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProfileTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROJECTORDERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProjectOrderTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROJECTEDORTRUELENGTHENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProjectedOrTrueLengthEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROJECTIONELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProjectionElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROPERTYSETDEFINITIONSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPropertySetDefinitionSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROPERTYSETDEFINITIONSET", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPropertySetDefinitionSet::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROPERTYSETTEMPLATETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPropertySetTemplateTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROTECTIVEDEVICETRIPPINGUNITTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProtectiveDeviceTrippingUnitTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPROTECTIVEDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcProtectiveDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCPUMPTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcPumpTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRADIOACTIVITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRadioActivityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRAILTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRAILINGTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailingTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRAILWAYPARTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailwayPartTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRAILWAYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRailwayTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRAMPFLIGHTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRampFlightTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRAMPTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRampTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRATIOMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRatioMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREAL", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReal::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRECURRENCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRecurrenceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREFERENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReferentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREFLECTANCEMETHODENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReflectanceMethodEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREINFORCEDSOILTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcedSoilTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREINFORCINGBARROLEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingBarRoleEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREINFORCINGBARSURFACEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingBarSurfaceEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREINFORCINGBARTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingBarTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCREINFORCINGMESHTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcReinforcingMeshTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRESOURCEOBJECTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcResourceObjectSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCRESOURCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcResourceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROADPARTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoadPartTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROADTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoadTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROLEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoleEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROOFTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRoofTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROTATIONALFREQUENCYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalFrequencyMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROTATIONALMASSMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalMassMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROTATIONALSTIFFNESSMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalStiffnessMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCROTATIONALSTIFFNESSSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcRotationalStiffnessSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIPREFIX", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSIPrefix::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIUNITNAME", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSIUnitName::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSANITARYTERMINALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSanitaryTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSECTIONMODULUSMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSectionModulusMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSECTIONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSectionTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSECTIONALAREAINTEGRALMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSectionalAreaIntegralMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSEGMENTINDEXSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSegmentIndexSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSENSORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSensorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSEQUENCEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSequenceEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSHADINGDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcShadingDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSHEARMODULUSMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcShearModulusMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSHELL", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcShell::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIGNTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSignTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIGNALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSignalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIMPLEPROPERTYTEMPLATETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSimplePropertyTemplateTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIMPLEVALUE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSimpleValue::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSIZESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSizeSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSLABTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSlabTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOLARDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSolarDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOLIDANGLEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSolidAngleMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOLIDORSHELL", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSolidOrShell::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOUNDPOWERLEVELMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPowerLevelMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOUNDPOWERMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPowerMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOUNDPRESSURELEVELMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPressureLevelMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSOUNDPRESSUREMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSoundPressureMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPACEBOUNDARYSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpaceBoundarySelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPACEHEATERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpaceHeaterTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPACETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpaceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPATIALREFERENCESELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpatialReferenceSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPATIALZONETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpatialZoneTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPECIFICHEATCAPACITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecificHeatCapacityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPECULAREXPONENT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecularExponent::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPECULARHIGHLIGHTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecularHighlightSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSPECULARROUGHNESS", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSpecularRoughness::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTACKTERMINALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStackTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTAIRFLIGHTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStairFlightTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTAIRTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStairTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTATEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStateEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTRUCTURALACTIVITYASSIGNMENTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralActivityAssignmentSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTRUCTURALCURVEACTIVITYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralCurveActivityTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTRUCTURALCURVEMEMBERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralCurveMemberTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTRUCTURALSURFACEACTIVITYTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralSurfaceActivityTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSTRUCTURALSURFACEMEMBERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcStructuralSurfaceMemberTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSUBCONTRACTRESOURCETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSubContractResourceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSURFACEFEATURETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceFeatureTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSURFACEORFACESURFACE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceOrFaceSurface::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSURFACESIDE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceSide::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSURFACESTYLEELEMENTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSurfaceStyleElementSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSWITCHINGDEVICETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSwitchingDeviceTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCSYSTEMFURNITUREELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcSystemFurnitureElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTANKTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTankTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTASKDURATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTaskDurationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTASKTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTaskTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEMPERATUREGRADIENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTemperatureGradientMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEMPERATURERATEOFCHANGEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTemperatureRateOfChangeMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTENDONANCHORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTendonAnchorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTENDONCONDUITTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTendonConduitTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTENDONTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTendonTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcText::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXTALIGNMENT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextAlignment::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXTDECORATION", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextDecoration::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXTFONTNAME", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextFontName::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXTFONTSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextFontSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXTPATH", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextPath::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTEXTTRANSFORMATION", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTextTransformation::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTHERMALADMITTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalAdmittanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTHERMALCONDUCTIVITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalConductivityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTHERMALEXPANSIONCOEFFICIENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalExpansionCoefficientMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTHERMALRESISTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalResistanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTHERMALTRANSMITTANCEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermalTransmittanceMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTHERMODYNAMICTEMPERATUREMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcThermodynamicTemperatureMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTIME", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTime::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTIMEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTIMEORRATIOSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeOrRatioSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTIMESERIESDATATYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeSeriesDataTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTIMESTAMP", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTimeStamp::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTORQUEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTorqueMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRACKELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTrackElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRANSFORMERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTransformerTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRANSITIONCODE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTransitionCode::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRANSLATIONALSTIFFNESSSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTranslationalStiffnessSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRANSPORTELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTransportElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRIMMINGPREFERENCE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTrimmingPreference::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTRIMMINGSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTrimmingSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCTUBEBUNDLETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcTubeBundleTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCURIREFERENCE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcURIReference::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCUNIT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnit::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCUNITENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnitEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCUNITARYCONTROLELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnitaryControlElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCUNITARYEQUIPMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcUnitaryEquipmentTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVALUE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcValue::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVALVETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcValveTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVAPORPERMEABILITYMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVaporPermeabilityMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVECTORORDIRECTION", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVectorOrDirection::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVEHICLETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVehicleTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVIBRATIONDAMPERTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVibrationDamperTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVIBRATIONISOLATORTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVibrationIsolatorTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVIRTUALELEMENTTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVirtualElementTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVOIDINGFEATURETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVoidingFeatureTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVOLUMEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVolumeMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCVOLUMETRICFLOWRATEMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcVolumetricFlowRateMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWALLTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWallTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWARPINGCONSTANTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWarpingConstantMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWARPINGMOMENTMEASURE", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWarpingMomentMeasure::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWARPINGSTIFFNESSSELECT", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWarpingStiffnessSelect::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWASTETERMINALTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWasteTerminalTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWINDOWPANELOPERATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowPanelOperationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWINDOWPANELPOSITIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowPanelPositionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWINDOWSTYLECONSTRUCTIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowStyleConstructionEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWINDOWSTYLEOPERATIONENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowStyleOperationEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWINDOWTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWINDOWTYPEPARTITIONINGENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWindowTypePartitioningEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWORKCALENDARTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWorkCalendarTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
{ "IFCWORKPLANTYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWorkPlanTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } },
	{ "IFCWORKSCHEDULETYPEENUM", []( const std::string& arg, const std::map<int, shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )->shared_ptr<BuildingObject> { return IFC4X3::IfcWorkScheduleTypeEnum::createObjectFromSTEP( arg, map, errorStream ); } }
};

shared_ptr<BuildingObject> IFC4X3::TypeFactory::createTypeObject( const std::string& class_name_upper, const std::string& type_arg, const std::map<int, shared_ptr<BuildingEntity> >& map_entities, std::stringstream& errorStream )
{
	auto it_find = type_factory_map.find( class_name_upper );
	if( it_find != type_factory_map.end() )
	{
		return it_find->second( type_arg, map_entities, errorStream );
	}
	// class_name not registered
	return shared_ptr<BuildingObject>();
}
void IFC4X3::TypeFactory::emptyMapOfTypes()
{
	type_factory_map.clear();
}
