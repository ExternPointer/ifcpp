/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <sstream>
#include <limits>
#include <map>
#include "ifcpp/Reader/ReaderUtil.h"
#include "ifcpp/Writer/WriterUtil.h"
#include "ifcpp/Model/BasicTypes.h"
#include "ifcpp/Model/BuildingException.h"
#include "ifcpp/Ifc/IfcModulusOfRotationalSubgradeReactionSelect.h"
#include "ifcpp/Ifc/IfcModulusOfSubgradeReactionSelect.h"
#include "ifcpp/Ifc/IfcModulusOfTranslationalSubgradeReactionSelect.h"
#include "ifcpp/Ifc/IfcRotationalStiffnessSelect.h"
#include "ifcpp/Ifc/IfcSimpleValue.h"
#include "ifcpp/Ifc/IfcTranslationalStiffnessSelect.h"
#include "ifcpp/Ifc/IfcWarpingStiffnessSelect.h"
#include "ifcpp/Ifc/IfcBoolean.h"

// TYPE IfcBoolean = BOOLEAN;
IFC4X3::IfcBoolean::IfcBoolean( bool value ) { m_value = value; }
void IFC4X3::IfcBoolean::getStepParameter( std::stringstream& stream, bool is_select_type ) const
{
	if( is_select_type ) { stream << "IFCBOOLEAN("; }
	if( m_value == false )
	{
		stream << ".F.";
	}
	else if( m_value == true )
	{
		stream << ".T.";
	}
	if( is_select_type ) { stream << ")"; }
}
shared_ptr<IFC4X3::IfcBoolean> IFC4X3::IfcBoolean::createObjectFromSTEP( const std::string& arg, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )
{
	if( arg.compare( "$" ) == 0 ) { return shared_ptr<IfcBoolean>(); }
	if( arg.compare( "*" ) == 0 ) { return shared_ptr<IfcBoolean>(); }
	shared_ptr<IfcBoolean> type_object( new IfcBoolean() );
	readBool( arg, type_object->m_value );
	return type_object;
}
