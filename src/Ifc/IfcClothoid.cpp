/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */
#include <sstream>
#include <limits>

#include "ifcpp/Model/AttributeObject.h"
#include "ifcpp/Model/BuildingException.h"
#include "ifcpp/Model/BuildingGuid.h"
#include "ifcpp/Reader/ReaderUtil.h"
#include "ifcpp/Writer/WriterUtil.h"
#include "ifcpp/Ifc/IfcAxis2Placement.h"
#include "ifcpp/Ifc/IfcClothoid.h"
#include "ifcpp/Ifc/IfcLengthMeasure.h"
#include "ifcpp/Ifc/IfcPresentationLayerAssignment.h"
#include "ifcpp/Ifc/IfcStyledItem.h"

// ENTITY IfcClothoid 
IFC4X3::IfcClothoid::IfcClothoid( int tag ) { m_tag = tag; }
void IFC4X3::IfcClothoid::getStepLine( std::stringstream& stream ) const
{
	stream << "#" << m_tag << "= IFCCLOTHOID" << "(";
	if( m_Position ) { m_Position->getStepParameter( stream, true ); } else { stream << "$" ; }
	stream << ",";
	if( m_ClothoidConstant ) { m_ClothoidConstant->getStepParameter( stream ); } else { stream << "$"; }
	stream << ");";
}
void IFC4X3::IfcClothoid::getStepParameter( std::stringstream& stream, bool /*is_select_type*/ ) const { stream << "#" << m_tag; }
void IFC4X3::IfcClothoid::readStepArguments( const std::vector<std::string>& args, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )
{
	const size_t num_args = args.size();
	if( num_args != 2 ){ std::stringstream err; err << "Wrong parameter count for entity IfcClothoid, expecting 2, having " << num_args << ". Entity ID: " << m_tag << std::endl; throw BuildingException( err.str().c_str() ); }
	m_Position = IfcAxis2Placement::createObjectFromSTEP( args[0], map, errorStream );
	m_ClothoidConstant = IfcLengthMeasure::createObjectFromSTEP( args[1], map, errorStream );
}
void IFC4X3::IfcClothoid::getAttributes( std::vector<std::pair<std::string, shared_ptr<BuildingObject> > >& vec_attributes ) const
{
	IFC4X3::IfcSpiral::getAttributes( vec_attributes );
	vec_attributes.emplace_back( std::make_pair( "ClothoidConstant", m_ClothoidConstant ) );
}
void IFC4X3::IfcClothoid::getAttributesInverse( std::vector<std::pair<std::string, shared_ptr<BuildingObject> > >& vec_attributes_inverse ) const
{
	IFC4X3::IfcSpiral::getAttributesInverse( vec_attributes_inverse );
}
void IFC4X3::IfcClothoid::setInverseCounterparts( shared_ptr<BuildingEntity> ptr_self_entity )
{
	IfcSpiral::setInverseCounterparts( ptr_self_entity );
}
void IFC4X3::IfcClothoid::unlinkFromInverseCounterparts()
{
	IfcSpiral::unlinkFromInverseCounterparts();
}
