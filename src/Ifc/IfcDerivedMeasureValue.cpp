/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */
#include <map>
#include "ifcpp/Model/BasicTypes.h"
#include "ifcpp/Model/BuildingException.h"
#include "ifcpp/Reader/ReaderUtil.h"
#include "ifcpp/Ifc/IfcAbsorbedDoseMeasure.h"
#include "ifcpp/Ifc/IfcAccelerationMeasure.h"
#include "ifcpp/Ifc/IfcAngularVelocityMeasure.h"
#include "ifcpp/Ifc/IfcAreaDensityMeasure.h"
#include "ifcpp/Ifc/IfcCompoundPlaneAngleMeasure.h"
#include "ifcpp/Ifc/IfcCurvatureMeasure.h"
#include "ifcpp/Ifc/IfcDoseEquivalentMeasure.h"
#include "ifcpp/Ifc/IfcDynamicViscosityMeasure.h"
#include "ifcpp/Ifc/IfcElectricCapacitanceMeasure.h"
#include "ifcpp/Ifc/IfcElectricChargeMeasure.h"
#include "ifcpp/Ifc/IfcElectricConductanceMeasure.h"
#include "ifcpp/Ifc/IfcElectricResistanceMeasure.h"
#include "ifcpp/Ifc/IfcElectricVoltageMeasure.h"
#include "ifcpp/Ifc/IfcEnergyMeasure.h"
#include "ifcpp/Ifc/IfcForceMeasure.h"
#include "ifcpp/Ifc/IfcFrequencyMeasure.h"
#include "ifcpp/Ifc/IfcHeatFluxDensityMeasure.h"
#include "ifcpp/Ifc/IfcHeatingValueMeasure.h"
#include "ifcpp/Ifc/IfcIlluminanceMeasure.h"
#include "ifcpp/Ifc/IfcInductanceMeasure.h"
#include "ifcpp/Ifc/IfcIntegerCountRateMeasure.h"
#include "ifcpp/Ifc/IfcIonConcentrationMeasure.h"
#include "ifcpp/Ifc/IfcIsothermalMoistureCapacityMeasure.h"
#include "ifcpp/Ifc/IfcKinematicViscosityMeasure.h"
#include "ifcpp/Ifc/IfcLinearForceMeasure.h"
#include "ifcpp/Ifc/IfcLinearMomentMeasure.h"
#include "ifcpp/Ifc/IfcLinearStiffnessMeasure.h"
#include "ifcpp/Ifc/IfcLinearVelocityMeasure.h"
#include "ifcpp/Ifc/IfcLuminousFluxMeasure.h"
#include "ifcpp/Ifc/IfcLuminousIntensityDistributionMeasure.h"
#include "ifcpp/Ifc/IfcMagneticFluxDensityMeasure.h"
#include "ifcpp/Ifc/IfcMagneticFluxMeasure.h"
#include "ifcpp/Ifc/IfcMassDensityMeasure.h"
#include "ifcpp/Ifc/IfcMassFlowRateMeasure.h"
#include "ifcpp/Ifc/IfcMassPerLengthMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfElasticityMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfLinearSubgradeReactionMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfRotationalSubgradeReactionMeasure.h"
#include "ifcpp/Ifc/IfcModulusOfSubgradeReactionMeasure.h"
#include "ifcpp/Ifc/IfcMoistureDiffusivityMeasure.h"
#include "ifcpp/Ifc/IfcMolecularWeightMeasure.h"
#include "ifcpp/Ifc/IfcMomentOfInertiaMeasure.h"
#include "ifcpp/Ifc/IfcMonetaryMeasure.h"
#include "ifcpp/Ifc/IfcPHMeasure.h"
#include "ifcpp/Ifc/IfcPlanarForceMeasure.h"
#include "ifcpp/Ifc/IfcPowerMeasure.h"
#include "ifcpp/Ifc/IfcPressureMeasure.h"
#include "ifcpp/Ifc/IfcRadioActivityMeasure.h"
#include "ifcpp/Ifc/IfcRotationalFrequencyMeasure.h"
#include "ifcpp/Ifc/IfcRotationalMassMeasure.h"
#include "ifcpp/Ifc/IfcRotationalStiffnessMeasure.h"
#include "ifcpp/Ifc/IfcSectionModulusMeasure.h"
#include "ifcpp/Ifc/IfcSectionalAreaIntegralMeasure.h"
#include "ifcpp/Ifc/IfcShearModulusMeasure.h"
#include "ifcpp/Ifc/IfcSoundPowerLevelMeasure.h"
#include "ifcpp/Ifc/IfcSoundPowerMeasure.h"
#include "ifcpp/Ifc/IfcSoundPressureLevelMeasure.h"
#include "ifcpp/Ifc/IfcSoundPressureMeasure.h"
#include "ifcpp/Ifc/IfcSpecificHeatCapacityMeasure.h"
#include "ifcpp/Ifc/IfcTemperatureGradientMeasure.h"
#include "ifcpp/Ifc/IfcTemperatureRateOfChangeMeasure.h"
#include "ifcpp/Ifc/IfcThermalAdmittanceMeasure.h"
#include "ifcpp/Ifc/IfcThermalConductivityMeasure.h"
#include "ifcpp/Ifc/IfcThermalExpansionCoefficientMeasure.h"
#include "ifcpp/Ifc/IfcThermalResistanceMeasure.h"
#include "ifcpp/Ifc/IfcThermalTransmittanceMeasure.h"
#include "ifcpp/Ifc/IfcTorqueMeasure.h"
#include "ifcpp/Ifc/IfcVaporPermeabilityMeasure.h"
#include "ifcpp/Ifc/IfcVolumetricFlowRateMeasure.h"
#include "ifcpp/Ifc/IfcWarpingConstantMeasure.h"
#include "ifcpp/Ifc/IfcWarpingMomentMeasure.h"
#include "ifcpp/Ifc/IfcValue.h"
#include "ifcpp/Ifc/IfcDerivedMeasureValue.h"

// TYPE IfcDerivedMeasureValue = SELECT	(IfcAbsorbedDoseMeasure	,IfcAccelerationMeasure	,IfcAngularVelocityMeasure	,IfcAreaDensityMeasure	,IfcCompoundPlaneAngleMeasure	,IfcCurvatureMeasure	,IfcDoseEquivalentMeasure	,IfcDynamicViscosityMeasure	,IfcElectricCapacitanceMeasure	,IfcElectricChargeMeasure	,IfcElectricConductanceMeasure	,IfcElectricResistanceMeasure	,IfcElectricVoltageMeasure	,IfcEnergyMeasure	,IfcForceMeasure	,IfcFrequencyMeasure	,IfcHeatFluxDensityMeasure	,IfcHeatingValueMeasure	,IfcIlluminanceMeasure	,IfcInductanceMeasure	,IfcIntegerCountRateMeasure	,IfcIonConcentrationMeasure	,IfcIsothermalMoistureCapacityMeasure	,IfcKinematicViscosityMeasure	,IfcLinearForceMeasure	,IfcLinearMomentMeasure	,IfcLinearStiffnessMeasure	,IfcLinearVelocityMeasure	,IfcLuminousFluxMeasure	,IfcLuminousIntensityDistributionMeasure	,IfcMagneticFluxDensityMeasure	,IfcMagneticFluxMeasure	,IfcMassDensityMeasure	,IfcMassFlowRateMeasure	,IfcMassPerLengthMeasure	,IfcModulusOfElasticityMeasure	,IfcModulusOfLinearSubgradeReactionMeasure	,IfcModulusOfRotationalSubgradeReactionMeasure	,IfcModulusOfSubgradeReactionMeasure	,IfcMoistureDiffusivityMeasure	,IfcMolecularWeightMeasure	,IfcMomentOfInertiaMeasure	,IfcMonetaryMeasure	,IfcPHMeasure	,IfcPlanarForceMeasure	,IfcPowerMeasure	,IfcPressureMeasure	,IfcRadioActivityMeasure	,IfcRotationalFrequencyMeasure	,IfcRotationalMassMeasure	,IfcRotationalStiffnessMeasure	,IfcSectionModulusMeasure	,IfcSectionalAreaIntegralMeasure	,IfcShearModulusMeasure	,IfcSoundPowerLevelMeasure	,IfcSoundPowerMeasure	,IfcSoundPressureLevelMeasure	,IfcSoundPressureMeasure	,IfcSpecificHeatCapacityMeasure	,IfcTemperatureGradientMeasure	,IfcTemperatureRateOfChangeMeasure	,IfcThermalAdmittanceMeasure	,IfcThermalConductivityMeasure	,IfcThermalExpansionCoefficientMeasure	,IfcThermalResistanceMeasure	,IfcThermalTransmittanceMeasure	,IfcTorqueMeasure	,IfcVaporPermeabilityMeasure	,IfcVolumetricFlowRateMeasure	,IfcWarpingConstantMeasure	,IfcWarpingMomentMeasure);
shared_ptr<IFC4X3::IfcDerivedMeasureValue> IFC4X3::IfcDerivedMeasureValue::createObjectFromSTEP( const std::string& arg, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )
{
	if( arg.empty() ){ return shared_ptr<IfcDerivedMeasureValue>(); }
	if( arg.compare("$")==0 )
	{
		return shared_ptr<IfcDerivedMeasureValue>();
	}
	if( arg.compare("*")==0 )
	{
		return shared_ptr<IfcDerivedMeasureValue>();
	}
	shared_ptr<IfcDerivedMeasureValue> result_object;
	readSelectType( arg, result_object, map, errorStream );
	return result_object;
}
