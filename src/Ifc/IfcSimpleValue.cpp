/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */
#include <map>
#include "ifcpp/Model/BasicTypes.h"
#include "ifcpp/Model/BuildingException.h"
#include "ifcpp/Reader/ReaderUtil.h"
#include "ifcpp/Ifc/IfcBinary.h"
#include "ifcpp/Ifc/IfcBoolean.h"
#include "ifcpp/Ifc/IfcDate.h"
#include "ifcpp/Ifc/IfcDateTime.h"
#include "ifcpp/Ifc/IfcDuration.h"
#include "ifcpp/Ifc/IfcIdentifier.h"
#include "ifcpp/Ifc/IfcInteger.h"
#include "ifcpp/Ifc/IfcLabel.h"
#include "ifcpp/Ifc/IfcLogical.h"
#include "ifcpp/Ifc/IfcPositiveInteger.h"
#include "ifcpp/Ifc/IfcReal.h"
#include "ifcpp/Ifc/IfcText.h"
#include "ifcpp/Ifc/IfcTime.h"
#include "ifcpp/Ifc/IfcTimeStamp.h"
#include "ifcpp/Ifc/IfcValue.h"
#include "ifcpp/Ifc/IfcSimpleValue.h"

// TYPE IfcSimpleValue = SELECT	(IfcBinary	,IfcBoolean	,IfcDate	,IfcDateTime	,IfcDuration	,IfcIdentifier	,IfcInteger	,IfcLabel	,IfcLogical	,IfcPositiveInteger	,IfcReal	,IfcText	,IfcTime	,IfcTimeStamp);
shared_ptr<IFC4X3::IfcSimpleValue> IFC4X3::IfcSimpleValue::createObjectFromSTEP( const std::string& arg, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )
{
	if( arg.empty() ){ return shared_ptr<IfcSimpleValue>(); }
	if( arg.compare("$")==0 )
	{
		return shared_ptr<IfcSimpleValue>();
	}
	if( arg.compare("*")==0 )
	{
		return shared_ptr<IfcSimpleValue>();
	}
	shared_ptr<IfcSimpleValue> result_object;
	readSelectType( arg, result_object, map, errorStream );
	return result_object;
}
